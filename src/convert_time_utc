let
    fnConvertTimeUTC = (timeText as text) as nullable datetimezone =>
        let
            // Trim the input string.
            trimmed = Text.Trim(timeText),
            // Split the string into parts by spaces.
            parts = Text.Split(trimmed, " "),
            // Expect the parts to be: [date, time, numeric offset, (optional abbreviation)]
            datePart = parts{0},
            timePart = parts{1},
            numericOffset = if List.Count(parts) >= 3 then parts{2} else "",
            // If numericOffset is exactly 5 characters (e.g. "-0500"), insert a colon to get "-05:00".
            offsetFormatted = if Text.Length(numericOffset) = 5 then Text.Insert(numericOffset, 3, ":") else numericOffset,
            // Rebuild the ISO8601 string.
            isoString = datePart & "T" & timePart & offsetFormatted,
            // Parse the string as a DateTimeZone.
            dtZone = try DateTimeZone.FromText(isoString) otherwise null,
            // Switch the parsed time to UTC.
            utcTime = if dtZone <> null then DateTimeZone.SwitchZone(dtZone, 0) else null
        in
            utcTime
in
    fnConvertTimeUTC
