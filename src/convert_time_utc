let
    fnConvertTimeUTC = (timeText as text) as nullable datetime =>
        let
            // Trim the input.
            trimmed = Text.Trim(timeText),
            // Split the string by spaces.
            parts = Text.Split(trimmed, " "),
            // First part is the date.
            datePart = parts{0},
            // Second part is the time (with fractional seconds if any).
            timePart = parts{1},
            // Third part should be the numeric offset (like "-0500").
            numericOffset = if List.Count(parts) >= 3 then parts{2} else "",
            // If numericOffset is exactly 5 characters, insert a colon to get proper format ("-05:00").
            offsetFormatted = if Text.Length(numericOffset) = 5 then Text.Insert(numericOffset, 3, ":") else numericOffset,
            // Combine date and time (without offset) into an ISO string.
            isoBase = datePart & "T" & timePart,
            // Parse the base datetime (without offset).
            dt = DateTime.FromText(isoBase),
            // Convert offset to a number of hours.
            offsetHours = if offsetFormatted <> "" then
                             Number.From(Text.Start(offsetFormatted, 3)) + Number.From(Text.End(offsetFormatted, 2)) / 60
                          else 0,
            // Determine sign: if the offset string starts with "-", then sign = -1; otherwise, sign = 1.
            sign = if Text.StartsWith(offsetFormatted, "-") then -1 else 1,
            // To convert from local (given offset) to UTC:
            // If the offset is negative (e.g. "-05:00"), it means local time is 5 hours behind UTC, so add 5 hours.
            // If the offset is positive, subtract the offset.
            utcTime = if sign = -1 then dt + #duration(0, Abs(offsetHours), 0, 0)
                      else dt - #duration(0, Abs(offsetHours), 0, 0)
        in
            utcTime
in
    fnConvertTimeUTC
